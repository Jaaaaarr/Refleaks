# -*- coding: utf-8 -*-
"""
Created on Tue Aug 22 16:24:50 2017

@author: Joseph Jarman
"""
"""
Property Tables From ASHRAE 2009/2017:
0  Temp [degC]
1  Pressure [MPa]
2  Density liq [kg/m3]
3  Specific volume vapour [m3/kg]
4  Enthalpy liq [kJ/kg]
5  Enthalpy vapour [kJ/kg]
6  Entropy liq [kJ/kgK]
7  Entropy vapour [kJ/kgK]
8  cp liq [kJ/kgK]
9  cp vapour [kJ/kgK]
10 cp/cv specific heat ratio
11 Sound velocity, liquid [m/s]
12 Sound velocity, vapour [m/s]
13 Viscosity liquid [mu Pa s]
14 Viscosity vapour [mu Pa s]
15 Thermal conductivity, liquid [mW/mK]
16 thermal conductivity, vapour [mW/mK]
17 Surface tension [mN/m]
"""
r32 = [[-40,0.17741,1180.2,0.19743,133.23,502.02,0.7382,2.32,1.608,0.94,1.343,910,209.7,239.4,9.75,177.8,9.1,18.44],
[-38,0.19409,1174.4,0.18134,136.45,502.91,0.7519,2.3103,1.612,0.952,1.347,900,210.1,233.6,9.84,176.1,9.19,18.05],
[-36,0.21197,1168.6,0.1668,139.69,503.78,0.7655,2.3008,1.616,0.965,1.35,889,210.4,228.1,9.92,174.5,9.29,17.66],
[-34,0.23111,1162.8,0.15365,142.93,504.63,0.7791,2.2916,1.621,0.977,1.354,879,210.6,222.6,10.01,172.8,9.39,17.27],
[-32,0.25159,1156.9,0.14173,146.18,505.47,0.7926,2.2824,1.626,0.99,1.358,868,210.9,217.4,10.09,171.2,9.5,16.89],
[-30,0.27344,1151,0.13091,149.45,506.27,0.806,2.2735,1.631,1.004,1.363,858,211.1,212.3,10.18,169.5,9.6,16.5],
[-28,0.29675,1145,0.12107,152.72,507.06,0.8193,2.2647,1.637,1.017,1.367,847,211.3,207.4,10.26,167.9,9.71,16.12],
[-26,0.32157,1138.9,0.11211,156.01,507.83,0.8326,2.2561,1.642,1.031,1.372,837,211.4,202.6,10.35,166.3,9.83,15.74],
[-24,0.34796,1132.9,0.10393,159.31,508.57,0.8458,2.2476,1.648,1.045,1.377,826,211.5,197.9,10.43,164.6,9.95,15.36],
[-22,0.376,1126.7,0.09646,162.62,509.28,0.8589,2.2392,1.654,1.06,1.383,816,211.6,193.3,10.52,163,10.07,14.99],
[-20,0.40575,1120.6,0.08963,165.94,509.97,0.872,2.231,1.661,1.075,1.389,805,211.7,188.9,10.61,161.3,10.19,14.61],
[-18,0.43728,1114.3,0.08337,169.28,510.64,0.885,2.2229,1.668,1.09,1.395,794,211.7,184.6,10.7,159.7,10.32,14.24],
[-16,0.47067,1108,0.07762,172.63,511.28,0.8979,2.2149,1.675,1.106,1.401,784,211.7,180.5,10.78,158.1,10.46,13.87],
[-14,0.50597,1101.7,0.07234,175.99,511.89,0.9109,2.207,1.682,1.122,1.408,773,211.7,176.4,10.87,156.5,10.6,13.5],
[-12,0.54327,1095.2,0.06749,179.37,512.47,0.9237,2.1992,1.69,1.139,1.416,762,211.6,172.4,10.96,154.9,10.74,13.14],
[-10,0.58263,1088.8,0.06301,182.76,513.02,0.9365,2.1915,1.698,1.156,1.423,751,211.5,168.5,11.05,153.2,10.89,12.77],
[-8,0.62414,1082.2,0.05889,186.18,513.54,0.9493,2.1839,1.706,1.174,1.432,741,211.4,164.8,11.14,151.6,11.04,12.41],
[-6,0.66786,1075.6,0.05508,189.6,514.03,0.962,2.1764,1.715,1.192,1.44,730,211.2,161.1,11.23,150,11.21,12.05],
[-4,0.71388,1068.9,0.05155,193.05,514.49,0.9747,2.169,1.725,1.211,1.45,719,211,157.5,11.32,148.4,11.38,11.69],
[-2,0.76226,1062.1,0.04829,196.52,514.91,0.9874,2.1616,1.735,1.231,1.46,708,210.8,154,11.42,146.8,11.55,11.34],
[0,0.8131,1055.3,0.04527,200,515.3,1,2.1543,1.745,1.251,1.47,697,210.5,150.6,11.51,145.3,11.73,10.99],
[2,0.86647,1048.3,0.04246,203.5,515.65,1.0126,2.1471,1.756,1.272,1.481,686,210.2,147.3,11.61,143.7,11.93,10.63],
[4,0.92245,1041.3,0.03986,207.03,515.96,1.0252,2.1399,1.767,1.294,1.493,675,209.8,144,11.7,142.1,12.13,10.29],
[6,0.98113,1034.2,0.03743,210.58,516.24,1.0377,2.1327,1.779,1.317,1.506,664,209.4,140.8,11.8,140.5,12.34,9.94],
[8,1.0426,1027,0.03518,214.15,516.47,1.0503,2.1256,1.792,1.341,1.519,652,209,137.7,11.9,139,12.56,9.6],
[10,1.1069,1019.7,0.03308,217.74,516.66,1.0628,2.1185,1.806,1.367,1.534,641,208.5,134.6,12,137.4,12.79,9.25],
[12,1.1742,1012.2,0.03112,221.36,516.8,1.0753,2.1114,1.82,1.393,1.549,630,208,131.6,12.1,135.9,13.04,8.91],
[14,1.2445,1004.7,0.02929,225.01,516.9,1.0878,2.1043,1.835,1.421,1.565,618,207.5,128.7,12.48,134.3,13.29,8.58],
[16,1.3179,997.1,0.02758,228.68,516.95,1.1003,2.0972,1.851,1.45,1.583,607,206.9,125.8,12.6,132.8,13.56,8.24],
[18,1.3946,989.3,0.02598,232.39,516.95,1.1128,2.0902,1.868,1.481,1.602,595,206.3,123,12.73,131.2,13.85,7.91],
[20,1.4746,981.4,0.02448,236.12,516.9,1.1253,2.0831,1.886,1.514,1.622,584,205.6,120.3,12.86,129.7,14.16,7.59],
[22,1.5579,973.3,0.02307,239.89,516.79,1.1378,2.076,1.905,1.548,1.644,572,204.9,117.5,13,128.2,14.48,7.26],
[24,1.6448,965.2,0.02175,243.69,516.62,1.1503,2.0688,1.926,1.585,1.668,560,204.1,114.9,13.14,126.6,14.83,6.94],
[26,1.7353,956.8,0.02051,247.53,516.39,1.1629,2.0616,1.948,1.624,1.693,548,203.3,112.2,13.28,125.1,15.19,6.62],
[28,1.8295,948.3,0.01935,251.4,516.09,1.1755,2.0544,1.972,1.667,1.721,536,202.4,109.7,13.43,123.6,15.59,6.3],
[30,1.9275,939.6,0.01826,255.32,515.72,1.1881,2.0471,1.997,1.712,1.75,524,201.5,107.1,13.58,122.1,16.01,5.99],
[32,2.0294,930.7,0.01722,259.28,515.29,1.2007,2.0397,2.025,1.76,1.783,512,200.6,104.6,13.74,120.6,16.46,5.68],
[34,2.1353,921.7,0.01625,263.28,514.77,1.2134,2.0322,2.055,1.813,1.819,499,199.6,102.1,13.9,119.1,16.95,5.37],
[36,2.2454,912.4,0.01533,267.34,514.17,1.2262,2.0246,2.088,1.87,1.858,487,198.5,99.7,14.07,117.6,17.47,5.07],
[38,2.3597,902.8,0.01447,271.45,513.49,1.2391,2.0169,2.124,1.933,1.901,474,197.4,97.3,14.25,116.1,18.04,4.77],
[40,2.4783,893,0.01365,275.61,512.71,1.252,2.0091,2.163,2.001,1.948,461,196.2,94.9,14.44,114.6,18.65,4.47],
[42,2.6014,883,0.01287,279.84,511.82,1.265,2.0011,2.206,2.077,2.001,448,194.9,92.5,14.64,113.1,19.32,4.18],
[44,2.7292,872.6,0.01214,284.13,510.83,1.2781,1.9929,2.255,2.16,2.06,435,193.6,90.2,14.84,111.6,20.05,3.89],
[46,2.8616,861.9,0.01144,288.5,509.72,1.2914,1.9845,2.309,2.254,2.126,421,192.3,87.8,15.06,110.1,20.85,3.61],
[48,2.9989,850.8,0.01078,292.95,508.48,1.3048,1.9759,2.369,2.358,2.201,408,190.8,85.5,15.29,108.6,21.73,3.33],
[50,3.1412,839.3,0.01015,297.49,507.1,1.3183,1.967,2.439,2.477,2.287,394,189.3,83.2,15.54,107,22.69,3.06],
[52,3.2887,827.3,0.00955,302.12,505.57,1.3321,1.9578,2.518,2.613,2.385,379,187.7,80.8,15.8,105.5,23.77,2.79],
[54,3.4415,814.8,0.00897,306.87,503.86,1.3461,1.9482,2.609,2.771,2.499,365,186,78.5,16.09,104,24.97,2.52],
[56,3.5997,801.7,0.00843,311.74,501.95,1.3603,1.9382,2.717,2.956,2.633,350,184.3,76.1,16.39,102.5,26.31,2.26],
[58,3.7635,787.9,0.0079,316.75,499.82,1.3749,1.9277,2.845,3.175,2.793,335,182.4,73.8,16.73,100.9,27.83,2.01],
[60,3.9332,773.3,0.0074,321.93,497.44,1.3898,1.9166,3.001,3.441,2.987,320,180.4,71.4,17.09,99.4,29.55,1.76],
[62,4.1089,757.8,0.00691,327.3,494.76,1.4052,1.9048,3.193,3.771,3.228,304,178.3,68.9,17.49,97.8,31.54,1.52],
[64,4.2909,741.1,0.00644,332.9,491.73,1.4211,1.8922,3.438,4.19,3.535,288,176.1,66.4,17.95,96.3,33.85,1.29],
[66,4.4793,723,0.00598,338.78,488.26,1.4377,1.8785,3.761,4.743,3.938,271,173.7,63.8,18.46,94.8,36.59,1.06],
[68,4.6745,703.2,0.00553,345.02,484.25,1.4553,1.8634,4.207,5.508,4.495,254,171.2,61.1,19.06,93.3,39.9,0.85],
[70,4.8768,680.9,0.00508,351.73,479.52,1.474,1.8464,4.865,6.639,5.316,236,168.4,58.2,19.76,92,44.04,0.64]]

r290 = [[-40,0.11112,578.4,0.37985,105.12,528.48,0.6275,2.4433,2.256,1.453,1.184,1147,218.9,192.6,6.36,128,11.76,15.54],
[-38,0.12105,576.1,0.35076,109.65,530.87,0.6468,2.438,2.265,1.464,1.185,1134,219.3,188.3,6.41,126.8,11.94,15.26],
[-36,0.13166,573.8,0.32437,114.2,533.26,0.666,2.433,2.275,1.476,1.185,1121,219.6,184.1,6.47,125.6,12.12,14.98],
[-34,0.14297,571.4,0.30037,118.77,535.64,0.6851,2.4282,2.285,1.488,1.186,1108,220,180.1,6.52,124.5,12.3,14.7],
[-32,0.15502,569,0.27853,123.36,538.01,0.7041,2.4236,2.295,1.501,1.187,1095,220.3,176.1,6.57,123.3,12.48,14.42],
[-30,0.16783,566.6,0.25861,127.97,540.38,0.7231,2.4192,2.305,1.513,1.188,1082,220.6,172.3,6.62,122.2,12.67,14.15],
[-28,0.18144,564.2,0.24041,132.61,542.75,0.7419,2.415,2.316,1.526,1.189,1069,220.9,168.6,6.67,121.1,12.86,13.87],
[-26,0.19589,561.8,0.22376,137.26,545.11,0.7607,2.4109,2.327,1.539,1.191,1056,221.1,165,6.73,120,13.05,13.6],
[-24,0.21119,559.4,0.20851,141.94,547.46,0.7795,2.4071,2.338,1.553,1.192,1043,221.3,161.5,6.78,118.8,13.24,13.33],
[-22,0.22739,556.9,0.19452,146.64,549.8,0.7982,2.4034,2.349,1.566,1.193,1030,221.5,158.1,6.83,117.7,13.43,13.06],
[-20,0.24452,554.5,0.18167,151.36,552.13,0.8168,2.3999,2.361,1.58,1.195,1016,221.6,154.7,6.89,116.6,13.63,12.79],
[-18,0.26261,552,0.16984,156.11,554.46,0.8353,2.3965,2.373,1.595,1.197,1003,221.8,151.5,6.94,115.5,13.83,12.52],
[-16,0.2817,549.5,0.15894,160.88,556.77,0.8538,2.3933,2.385,1.609,1.198,990,221.8,148.3,6.99,114.4,14.03,12.25],
[-14,0.30181,546.9,0.14889,165.68,559.08,0.8722,2.3903,2.397,1.624,1.2,977,221.9,145.2,7.05,113.4,14.23,11.98],
[-12,0.323,544.4,0.13961,170.5,561.37,0.8906,2.3874,2.41,1.639,1.202,964,221.9,142.2,7.1,112.3,14.44,11.71],
[-10,0.34528,541.8,0.13103,175.35,563.65,0.909,2.3846,2.423,1.655,1.205,951,221.9,139.3,7.16,111.2,14.65,11.45],
[-8,0.3687,539.2,0.12308,180.22,565.92,0.9273,2.3819,2.436,1.671,1.207,938,221.8,136.4,7.22,110.1,14.86,11.18],
[-6,0.39329,536.6,0.11571,185.12,568.18,0.9455,2.3794,2.45,1.687,1.209,925,221.8,133.6,7.27,109.1,15.08,10.92],
[-4,0.41909,533.9,0.10887,190.05,570.42,0.9637,2.3769,2.464,1.704,1.212,912,221.6,130.9,7.33,108,15.29,10.65],
[-2,0.44613,531.3,0.10252,195.01,572.65,0.9819,2.3746,2.478,1.721,1.215,899,221.5,128.2,7.39,107,15.52,10.39],
[0,0.47446,528.6,0.09661,200,574.87,1,2.3724,2.493,1.739,1.218,885,221.3,125.6,7.45,106,15.74,10.13],
[2,0.5041,525.9,0.09111,205.02,577.06,1.0181,2.3703,2.508,1.757,1.221,872,221.1,123,7.51,104.9,15.97,9.87],
[4,0.5351,523.1,0.08598,210.06,579.24,1.0362,2.3682,2.524,1.776,1.225,859,220.8,120.5,7.57,103.9,16.2,9.62],
[6,0.56749,520.4,0.0812,215.14,581.41,1.0542,2.3663,2.54,1.795,1.229,846,220.5,118.1,7.63,102.9,16.44,9.36],
[8,0.60131,517.6,0.07673,220.25,583.55,1.0722,2.3644,2.556,1.815,1.232,833,220.2,115.7,7.69,101.9,16.68,9.1],
[10,0.6366,514.7,0.07255,225.4,585.67,1.0902,2.3626,2.573,1.835,1.237,819,219.8,113.3,7.75,100.9,16.93,8.85],
[12,0.6734,511.9,0.06865,230.57,587.77,1.1082,2.3608,2.591,1.856,1.241,806,219.3,111,7.82,99.9,17.18,8.6],
[14,0.71175,509,0.06498,235.79,589.85,1.1261,2.3592,2.609,1.878,1.246,793,218.9,108.8,7.88,99,17.44,8.34],
[16,0.75168,506,0.06155,241.03,591.91,1.144,2.3575,2.627,1.901,1.251,780,218.4,106.6,7.95,98,17.7,8.09],
[18,0.79324,503.1,0.05833,246.32,593.94,1.162,2.356,2.646,1.925,1.256,766,217.8,104.4,8.02,97,17.97,7.85],
[20,0.83646,500.1,0.0553,251.64,595.95,1.1799,2.3544,2.666,1.949,1.262,753,217.2,102.3,8.09,96.1,18.24,7.6],
[22,0.88139,497,0.05246,256.99,597.93,1.1978,2.3529,2.687,1.975,1.268,739,216.6,100.2,8.16,95.1,18.53,7.35],
[24,0.92807,493.9,0.04978,262.39,599.88,1.2157,2.3514,2.708,2.001,1.275,726,215.9,98.1,8.23,94.2,18.81,7.11],
[26,0.97653,490.8,0.04726,267.83,601.8,1.2336,2.35,2.73,2.029,1.282,713,215.2,96.1,8.31,93.3,19.11,6.87],
[28,1.0268,487.6,0.04488,273.31,603.68,1.2515,2.3486,2.753,2.058,1.29,699,214.4,94.1,8.38,92.3,19.41,6.62],
[30,1.079,484.4,0.04264,278.83,605.54,1.2695,2.3471,2.777,2.088,1.298,685,213.5,92.2,8.46,91.4,19.72,6.38],
[32,1.1331,481.1,0.04053,284.4,607.35,1.2874,2.3457,2.802,2.119,1.307,672,212.6,90.3,8.54,90.5,20.05,6.15],
[34,1.1891,477.8,0.03853,290.01,609.13,1.3053,2.3443,2.827,2.152,1.316,658,211.7,88.4,8.63,89.6,20.38,5.91],
[36,1.2472,474.4,0.03664,295.68,610.87,1.3233,2.3429,2.855,2.187,1.326,645,210.7,86.5,8.71,88.7,20.72,5.68],
[38,1.3072,471,0.03485,301.39,612.57,1.3413,2.3414,2.883,2.224,1.337,631,209.7,84.7,8.8,87.8,21.07,5.44],
[40,1.3694,467.5,0.03315,307.15,614.21,1.3594,2.3399,2.913,2.263,1.349,617,208.6,82.8,8.89,86.9,21.43,5.21],
[42,1.4337,463.9,0.03154,312.96,615.81,1.3774,2.3384,2.944,2.304,1.362,603,207.4,81,8.99,86,21.81,4.98],
[44,1.5002,460.3,0.03002,318.83,617.36,1.3955,2.3368,2.977,2.348,1.375,589,206.2,79.3,9.08,85.2,22.2,4.76],
[46,1.569,456.5,0.02857,324.76,618.86,1.4137,2.3352,3.012,2.395,1.391,575,204.9,77.5,9.19,84.3,22.6,4.53],
[48,1.64,452.7,0.0272,330.75,620.29,1.4319,2.3335,3.05,2.445,1.407,561,203.6,75.8,9.29,83.5,23.03,4.31]]

r1234yf = [[-30,0.09906,1264.5,0.17079,162.81,343.32,0.8566,1.599,1.188,0.811,1.129,690,134.9,290.1,8.75,81.7,9.22,13.89],
[-28,0.1081,1259,0.15732,165.2,344.67,0.8663,1.5984,1.195,0.818,1.13,681,135,283.3,8.85,81,9.38,13.58],
[-26,0.11778,1253.4,0.14512,167.6,346.02,0.876,1.598,1.201,0.825,1.131,672,135.2,276.7,8.96,80.3,9.54,13.27],
[-24,0.12812,1247.7,0.13404,170.01,347.36,0.8857,1.5976,1.207,0.832,1.132,664,135.4,270.3,9.06,79.6,9.7,12.97],
[-22,0.13916,1242,0.12398,172.43,348.71,0.8954,1.5973,1.214,0.839,1.133,655,135.5,264,9.16,78.9,9.86,12.66],
[-20,0.15092,1236.3,0.11482,174.87,350.05,0.905,1.597,1.22,0.847,1.135,646,135.6,258,9.25,78.2,10.02,12.36],
[-18,0.16344,1230.5,0.10647,177.32,351.39,0.9146,1.5968,1.227,0.854,1.136,637,135.7,252,9.35,77.5,10.17,12.06],
[-16,0.17676,1224.7,0.09884,179.79,352.73,0.9242,1.5967,1.234,0.862,1.137,628,135.7,246.2,9.45,76.8,10.33,11.76],
[-14,0.1909,1218.8,0.09187,182.27,354.06,0.9338,1.5967,1.24,0.869,1.139,620,135.8,240.6,9.55,76.2,10.49,11.47],
[-12,0.2059,1212.9,0.08548,184.76,355.39,0.9433,1.5967,1.247,0.877,1.141,611,135.8,235.1,9.64,75.5,10.65,11.18],
[-10,0.22178,1207,0.07962,187.26,356.72,0.9528,1.5968,1.254,0.885,1.142,602,135.8,229.7,9.74,74.8,10.82,10.88],
[-8,0.2386,1200.9,0.07424,189.78,358.04,0.9623,1.5969,1.261,0.893,1.144,594,135.7,224.5,9.83,74.1,10.98,10.6],
[-6,0.25637,1194.9,0.0693,192.31,359.36,0.9717,1.597,1.268,0.901,1.146,585,135.7,219.4,9.93,73.5,11.14,10.31],
[-4,0.27514,1188.7,0.06474,194.86,360.68,0.9812,1.5973,1.275,0.909,1.149,576,135.6,214.4,10.02,72.8,11.3,10.02],
[-2,0.29495,1182.5,0.06054,197.42,361.99,0.9906,1.5975,1.282,0.918,1.151,568,135.5,209.5,10.12,72.1,11.47,9.74],
[0,0.31582,1176.3,0.05667,200,363.29,1,1.5978,1.289,0.926,1.153,559,135.4,204.7,10.21,71.5,11.63,9.46],
[2,0.3378,1170,0.05309,202.59,364.59,1.0094,1.5981,1.297,0.935,1.156,551,135.2,200.1,10.31,70.8,11.8,9.19],
[4,0.36092,1163.6,0.04977,205.2,365.88,1.0187,1.5985,1.304,0.944,1.159,542,135.1,195.5,10.4,70.2,11.97,8.91],
[6,0.38523,1157.2,0.0467,207.82,367.16,1.0281,1.5989,1.312,0.953,1.162,533,134.8,191,10.5,69.5,12.14,8.64],
[8,0.41075,1150.6,0.04385,210.45,368.44,1.0374,1.5993,1.32,0.962,1.165,525,134.6,186.7,10.59,68.9,12.31,8.37],
[10,0.43753,1144,0.04121,213.1,369.7,1.0467,1.5998,1.327,0.972,1.168,516,134.3,182.4,10.69,68.2,12.48,8.1],
[12,0.46561,1137.4,0.03875,215.77,370.96,1.056,1.6003,1.335,0.982,1.172,508,134.1,178.2,10.78,67.6,12.65,7.83],
[14,0.49503,1130.6,0.03646,218.45,372.21,1.0653,1.6008,1.344,0.992,1.176,499,133.7,174.1,10.88,67,12.83,7.57],
[16,0.52583,1123.8,0.03433,221.15,373.45,1.0746,1.6013,1.352,1.002,1.18,490,133.4,170.1,10.98,66.3,13.01,7.31],
[18,0.55804,1116.9,0.03235,223.87,374.67,1.0838,1.6018,1.361,1.013,1.185,482,133,166.1,11.07,65.7,13.19,7.05],
[20,0.59172,1109.9,0.03049,226.6,375.89,1.0931,1.6024,1.369,1.024,1.19,473,132.6,162.3,11.17,65.1,13.38,6.8],
[22,0.6269,1102.8,0.02876,229.34,377.09,1.1023,1.6029,1.378,1.035,1.195,464,132.1,158.5,11.27,64.5,13.57,6.55],
[24,0.66363,1095.5,0.02714,232.11,378.28,1.1115,1.6034,1.387,1.047,1.201,456,131.7,154.7,11.37,63.8,13.76,6.3],
[26,0.70194,1088.2,0.02562,234.89,379.45,1.1208,1.604,1.397,1.06,1.207,447,131.1,151.1,11.48,63.2,13.96,6.05],
[28,0.74189,1080.8,0.0242,237.69,380.61,1.13,1.6045,1.407,1.073,1.213,438,130.6,147.5,11.58,62.6,14.16,5.81],
[30,0.78351,1073.3,0.02287,240.51,381.75,1.1392,1.6051,1.417,1.086,1.22,429,130,144,11.69,62,14.37,5.56],
[32,0.82686,1065.7,0.02162,243.35,382.87,1.1484,1.6056,1.427,1.101,1.228,421,129.4,140.5,11.79,61.4,14.58,5.33],
[34,0.87197,1057.9,0.02044,246.21,383.98,1.1576,1.6061,1.438,1.116,1.236,412,128.7,137.1,11.9,60.8,14.8,5.09],
[36,0.9189,1050,0.01934,249.09,385.06,1.1668,1.6066,1.449,1.132,1.245,403,128.1,133.8,12.01,60.2,15.03,4.86],
[38,0.96769,1042,0.0183,251.98,386.13,1.1759,1.6071,1.461,1.149,1.254,394,127.3,130.5,12.13,59.6,15.26,4.63],
[40,1.0184,1033.8,0.01732,254.9,387.17,1.1851,1.6075,1.473,1.167,1.265,385,126.6,127.2,12.25,59,15.5,4.4],
[42,1.0711,1025.5,0.01639,257.84,388.19,1.1943,1.6079,1.486,1.186,1.276,376,125.7,124,12.37,58.5,15.76,4.18],
[44,1.1257,1017,0.01552,260.81,389.18,1.2035,1.6083,1.5,1.207,1.289,367,124.9,120.9,12.49,57.9,16.02,3.96],
[46,1.1825,1008.3,0.01469,263.8,390.14,1.2128,1.6087,1.515,1.229,1.302,358,124,117.8,12.62,57.3,16.29,3.74],
[48,1.2413,999.4,0.01392,266.81,391.08,1.222,1.6089,1.531,1.252,1.317,349,123.1,114.7,12.75,56.7,16.57,3.53],
[50,1.3023,990.4,0.01318,269.85,391.98,1.2312,1.6092,1.548,1.277,1.333,340,122.1,111.7,12.89,56.1,16.87,3.32],
[52,1.3656,981.1,0.01248,272.92,392.85,1.2405,1.6094,1.566,1.305,1.351,331,121,108.7,13.03,55.6,17.19,3.12],
[54,1.4311,971.6,0.01182,276.02,393.68,1.2498,1.6095,1.586,1.335,1.371,322,120,105.8,13.18,55,17.52,2.92],
[56,1.4989,961.8,0.01119,279.15,394.48,1.2592,1.6095,1.607,1.367,1.393,312,118.8,102.8,13.34,54.4,17.87,2.72],
[58,1.5692,951.7,0.01059,282.32,395.23,1.2685,1.6095,1.631,1.403,1.418,303,117.6,99.9,13.5,53.8,18.25,2.52],
[60,1.6419,941.3,0.01002,285.53,395.93,1.2779,1.6093,1.656,1.442,1.445,293,116.4,97,13.67,53.3,18.65,2.33],
[62,1.7171,930.6,0.00948,288.77,396.58,1.2874,1.6091,1.685,1.485,1.477,283,115.1,94.2,13.85,52.7,19.08,2.15],
[64,1.7949,919.5,0.00897,292.06,397.18,1.2969,1.6087,1.717,1.534,1.512,272,113.7,91.3,14.05,52.1,19.54,1.97],
[66,1.8754,907.9,0.00848,295.39,397.71,1.3065,1.6082,1.752,1.589,1.553,262,112.3,88.4,14.25,51.5,20.04,1.79],
[68,1.9586,895.8,0.00801,298.78,398.18,1.3162,1.6076,1.792,1.651,1.6,251,110.8,85.6,14.47,51,20.59,1.62],
[70,2.0445,883.2,0.00756,302.22,398.57,1.326,1.6068,1.837,1.724,1.655,240,109.3,82.7,14.7,50.4,21.19,1.45],
[72,2.1334,870,0.00712,305.72,398.87,1.3359,1.6058,1.89,1.808,1.719,229,107.6,79.8,14.96,49.8,21.86,1.29],
[74,2.2252,856.1,0.00671,309.3,399.07,1.3459,1.6045,1.951,1.907,1.797,217,105.9,76.9,15.23,49.2,22.6,1.14],
[76,2.3201,841.4,0.00631,312.95,399.16,1.3561,1.603,2.025,2.028,1.891,206,104.2,74,15.54,48.7,23.43,0.99],
[78,2.4181,825.7,0.00592,316.69,399.11,1.3664,1.6011,2.114,2.176,2.009,194,102.3,71.1,15.88,48.1,24.38,0.84],
[80,2.5194,809,0.00555,320.54,398.9,1.377,1.5989,2.227,2.364,2.158,182,100.3,68.1,16.26,47.6,25.48,0.71]]
"""
General properties from various sources ISO 817, Wikipedia, et al
0. Name
1. Mol weight [g/mol]
2. UFL [% vol]
3. LFL [% vol]
4. AIT [degC]
5. HoC [MJ/kg]
6. Su [cm/s]

columns
0. r1234yf
1. r32
2. r290
"""
genproplist = [["R1234yf",114,12.3,6.2,405,11.8,1.5],
["R32",52,None,14.4,None,None,None],
["R290",44,None,2.1,None,None,None]]

"""
Global variables
"""
R = 8.3144598
pa = 101325
Cd = 0.75 # sharp orifice assumed
"""
function space
"""
def odd_number_or_not(num):
  if num % 2 != 0:
    return True
  else:
    return False

def interpolate(num):
  interp = []
  for i in range(0, 18):
    index = int(((int(num) + 40) / 2))
    interp.append((prop_table[index-1][i] + prop_table[index+1][i]) / 2)
  return(interp)

def discharge_coeff(inputt):
  if inputt == 1:
    return 0.75
  elif inputt == 2:
    return 0.99
  else:
    return "Error: Cd det gone wrong."

def get_prop(temp):
  indextemp = int(((int(temp) + 40) / 2))
  if odd_number_or_not(int(temp)) == True:
    #print("\nOdd temperature value: interpolating ASHRAE table...\n")
    prop_row = interpolate(int(temp))
    return prop_row
  else:
    return prop_table[indextemp]

def choked_or_not(Ti):
  prop = get_prop(Ti)
  gamma = prop[10]
  p = prop[1] * 1000000
  pc = pa * (gamma + 1 / (2))**(gamma/(gamma - 1))
  if p >= pc:
    print("\nInner pressure over critical; choked gas release.\n")
    return True
  else:
    print("\nInner pressure under critical; unchoked gas release.\n")
    return False

def calc_leak_choked(Si, Ti):
  T = float(Ti) + 273.15
  prop = get_prop(Ti)
  S = float(Si)
  p = prop[1] * 1000000 # from MPa to Pa
  M = gen_prop[1] # convert from g/mol to kg/mol is ratio of 1:1
  Rspec = R / M
  rhog = (prop[3])**-1 # from m3/kg to kg/m3
  Z = p / (rhog * Rspec * T)
  gamma = prop[10]
  bit0 = Cd * S * p
  bit1 = M / (Z * R * T)
  powerforbit2 = (gamma + 1) / (gamma - 1)
  bit2 = (2 / (gamma + 1))**powerforbit2
  bitsqrt = (gamma * bit1 * bit2)**(0.5)
 
  Wg = bit0 * bitsqrt
 
  mdot = Wg * 60000 # converting kg/s to g/min because why not
  print("\n\nLeak rate is: \n\n" + str(Wg) + " kg/s,\n\nor " + str("%.2f" % mdot) + " g/min.")
  return Wg

def calc_leak_non_choked(Si, Ti):
 T = float(Ti) + 273.15
 prop = get_prop(Ti)
 S = float(Si)
 pa = 101325
 p = prop[1] * 1000000 # from MPa to Pa
 M = gen_prop[1] # convert from g/mol to kg/mol is ratio of 1:1
 Rspec = R / M
 rhog = (prop[3])**-1 # from m3/kg to kg/m3
 Z = p / (rhog * Rspec * T)
 gamma = prop[10]
 bit0 = Cd * S * p
 bit1 = M / (Z * R * T)
 bit2 = (2 * gamma) / (gamma - 1)
 powerforbit3 = (gamma - 1) / gamma
 bit3 = 1 - ((pa / p)**powerforbit3)
 bit4 = (pa / p)**(1 / gamma)
 bitsqrt = (bit1 * bit2 * bit3)**(0.5)
 
 Wg = bit0 * bitsqrt * bit4
 
 mdot = Wg * 60000 # converting kg/s to g/min because why not
 print("\n\nLeak rate is: \n\n" + str(Wg) + " kg/s,\n\nor " + str("%.2f" % mdot) + " g/min.")
 return Wg

def leak():
 
 print("""   
 
     #############################
    #                              #
    #   冷媒漏れ計算くん ver 4.0      #
    #                              #
     #############################
                        by Joseph Jarman
                       
 
     ~~~ R32 ~~~ R290 ~~~ R1234yf ~~~ 
 """)
 
 print("""
 _______________________________________
 Menu
 
 Select your choice of your refrigerant:
 
 1. R32
 2. R290
 3. R1234yf
 """)
 
 select = str(input(" Type in selection number: "))
 global prop_table
 global gen_prop
 if select == "1":
   prop_table = r32
   name = "R32"
   gen_prop = genproplist[1]
 elif select == "2":
   prop_table = r290
   name = "R290"
   gen_prop = genproplist[2]
 elif select == "3":
   prop_table = r1234yf
   name = "R1234yf"
   gen_prop = genproplist[0]
 else:
   print("Error with selection")
   
 print("\n\nYou have selected " + name + ".") 
 
 T = input("\nType in refrigerant temperature [degC]: ")
 #if odd_number_or_not(int(T)) == True:
 #  interpolate(int(T))
 
 S = float(input("Type in cross section area of leak [mm2]: ")) * 0.000001 #mm2 to m2
 
 #inputt = ("""\nEnter number for opening characteristics of leak:\n
      #  1. Sharp orifice
       # 2. Rounded orifice\n
        #""")
 #global Cd
 #Cd = discharge_coeff(inputt)
 #if type(Cd) == str:
 #  print(str(Cd))
 global Wg
 
 if choked_or_not(T) == True:
   Wg = calc_leak_choked(S, T)
 elif choked_or_not(T) == False:
   Wg = calc_leak_non_choked(S, T)
 else:
   print("Error with choke determination.")

def dod():
  import numpy as np
  import matplotlib.pyplot as plt

  # Refrigerant Dictionary
  print("\n\n\n===== Degree of Dilution Plot =====\n")
  uw = input("\nType in ventilation velocity [m/s]: ")
  Wg = 0.001 * float(input("\nType in release rate [g/s]: "))

  rhog = 3.25
  k = 0.25
  LFL = 6.0 * 0.01

  def f1(blue):
    return 14 * (blue**1)
  def f2(red):
    return 0.045 * (red**1)

  #x1 = np.arange(0.001, 100, 0.001)
  x1 = np.geomspace(0.001, 100, 50)

  plt.figure()
  plt.suptitle("Assessment of degree of dilution", fontsize = 12)
  plt.grid(True)

  plt.xlabel("Release characteristic Wg / rhog * k * LFL [m3/s]")
  plt.xscale("log")

  plt.ylabel("Ventilation velocity Uw [m/s]")
  plt.yscale("log")

  plt.plot(x1, f1(x1), "b", x1, f2(x1), "r")
  #plt.show()

  Rc = Wg / (rhog * k * LFL)

  #print("Rc = " + str(Rc))

  marker_pos = [(Wg / (rhog * k * LFL)), uw]
  plt.plot(marker_pos[0], marker_pos[1], "o")

  """ det numerically"""

  # Let x = Wg
  if float(marker_pos[1]) <= f2(Rc):
    dilutiondegree = "Low dilution"
    colour = "red"
  elif float(marker_pos[1]) >= f1(Rc):
    dilutiondegree = "High dilution"
    colour = "blue"
  else:
    dilutiondegree = "Medium dilution"
    colour = "green"
  
  plt.title(dilutiondegree, fontsize = 15, color = colour)
  print("The dilution is assessed to be that of a " + dilutiondegree)














while True:
  leak()
  if input("Hit Enter to continue. Else hit any key and enter.") == "":
    break
  else:
    print("\n\nRestaring...")
    continue

while True:
  dod()   
  if input("..."):
    
  
  
  
  
  
  